/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.39
 * Generated at: 2020-03-26 08:44:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bookdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

	String path = request.getContextPath();
	// 获得本项目的地址(例如: http://localhost:8080/MyApp/)赋值给basePath变量 
	String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
			+ path + "/";
	// 将 "项目路径basePath" 放入pageContext中，待以后用EL表达式读出。 
	pageContext.setAttribute("basePath", basePath);

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"zh-CN\">\n");
      out.write("\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta charset=\"utf-8\">\n");
      out.write("\t\t<base target=\"_blank\" />     \n");
      out.write("\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\t\t<!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->\n");
      out.write("\t\t<meta name=\"description\" content=\"\">\n");
      out.write("\t\t<meta name=\"author\" content=\"\">\n");
      out.write("\t\t<link rel=\"icon\" href=\"https://v3.bootcss.com/favicon.ico\">\n");
      out.write("\n");
      out.write("\t\t<title>图书查找</title>\n");
      out.write("\t\t<style> \n");
      out.write("\t\t\ta:link{text-decoration: underline;color: blue}\n");
      out.write("\t\t\ta:active{text-decoration:underline;blink}\n");
      out.write("\t\t\ta:hover{text-decoration:underline;color: red}\n");
      out.write("\t\t\ta:visited{text-decoration: underline;color: red}\n");
      out.write("\t\t</style> \n");
      out.write("\t\t<base href=\"");
      out.print(basePath);
      out.write("\" />\n");
      out.write("\t\t<!-- Bootstrap core CSS -->\n");
      out.write("\t\t<link href=\"");
      out.print(basePath);
      out.write("css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("\t\t<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->\n");
      out.write("\t\t<link href=\"");
      out.print(basePath);
      out.write("css/ie10-viewport-bug-workaround.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("\t\t<!-- Custom styles for this template -->\n");
      out.write("\t\t<link href=\"");
      out.print(basePath);
      out.write("css/cover.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("\t\t<!-- Just for debugging purposes. Don't actually copy these 2 lines! -->\n");
      out.write("\t\t<!--[if lt IE 9]><script src=\"https://v3.bootcss.com/assets/js/ie8-responsive-file-warning.js\"></script><![endif]-->\n");
      out.write("\t\t<script src=\"https://v3.bootcss.com/assets/js/ie-emulation-modes-warning.js\"></script>\n");
      out.write("\n");
      out.write("\t\t<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->\n");
      out.write("\t\t<!--[if lt IE 9]>\n");
      out.write("      <script src=\"https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js\"></script>\n");
      out.write("      <script src=\"https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js\"></script>\n");
      out.write("    <![endif]-->\n");
      out.write("\t</head>\n");
      out.write("\n");
      out.write("\t<body>\n");
      out.write("\n");
      out.write("\t\t<div class=\"site-wrapper\">\n");
      out.write("\n");
      out.write("\t\t\t<div class=\"site-wrapper-inner\">\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"cover-container\">\n");
      out.write("\t\t\t\t\t<div class=\"masthead clearfix \">\n");
      out.write("\t\t\t\t\t\t<div class=\"inner\">\n");
      out.write("\t\t\t\t\t\t\t<h1 class=\"masthead-brand\">图书信息概览</h3>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t<div class=\"inner cover\">\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-lg-12\">\n");
      out.write("\t\t\t\t\t\t\t<!-- Book_Shelf [primary_key=305, storey_number=3, area_number=中庭一区, \n");
      out.write("\t\t\t\t\t\t\tshelf_number=1, search_numbe r_type=TP, search_number_start=-61/1, search_number_end=273/49, zhuzi=0]\n");
      out.write("\t\t\t\t\t\t\t-->\n");
      out.write("\t\t\t\t\t\t\t\t");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t<ul class=\"list-group\">\n");
      out.write("\t\t\t\t\t\t\t\t    <li class=\"list-group-item\"><font color=black> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Bb.storey_number}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("楼</font></li>\n");
      out.write("\t\t\t\t\t\t\t\t    <li class=\"list-group-item\"><font color=black>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Bb.area_number}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</font></li>\n");
      out.write("\t\t\t\t\t\t\t\t    <li class=\"list-group-item\"><font color=black>第");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Bb.shelf_number}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("书架</font></li>\n");
      out.write("\t\t\t\t\t\t\t\t    <li class=\"list-group-item\"><a href=\"");
      out.print(basePath);
      out.write("/LZX/3d?shelf=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Bb.search_information}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">在3D虚拟场景中显示书架具体位置</a></li>\n");
      out.write("\t\t\t\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<!-- /.col-lg-6 -->\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t<!-- /.row -->\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t\t<div class=\"navbar navbar-inverse navbar-fixed-bottom\">\n");
      out.write("\t\t\t<div class=\"inner\">\n");
      out.write("\t\t\t\t<p>版权所有：李忠雪 by ynu.edu.cn\n");
      out.write("\t\t\t\t\t<!-- <a href=\"http://getbootstrap.com\">李忠雪</a>, by\n");
      out.write("\t\t\t\t\t<a href=\"https://twitter.com/mdo\">ynu.edu.cn</a>.</p> -->\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t\t<!-- Bootstrap core JavaScript\n");
      out.write("    ================================================== -->\n");
      out.write("\t\t<!-- Placed at the end of the document so the pages load faster -->\n");
      out.write("\t\t<script src=\"https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js\"></script>\n");
      out.write("\t\t<script>\n");
      out.write("\t\t\twindow.jQuery || document.write('<script src=\"https://v3.bootcss.com/assets/js/vendor/jquery.min.js\"><\\/script>')\n");
      out.write("\t\t</script>\n");
      out.write("\t\t<script src=\"https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("\t\t<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->\n");
      out.write("\t\t<script src=\"");
      out.print(basePath);
      out.write("js/ie10-viewport-bug-workaround.js\"></script>\n");
      out.write("\t</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
